<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PostDao">
    <!--게시글 등록-->
    <insert id="insertPost" parameterType="PostVo" useGeneratedKeys="true" keyProperty="postNo">
        INSERT INTO post (bo_no, po_mb_no, po_subject, po_content, po_tag, po_datetime, po_views, po_comment)
        VALUES (#{boardNo}, #{writerNo}, #{subject}, #{content}, #{tag} , NOW(), 0, 0 )
    </insert>

    <select id="selectLastInsertID" resultType="int">
        SELECT LAST_INSERT_ID();
    </select>

    <resultMap id="selectPostListResult" type="PostSummaryVo">
        <id property="postNo" javaType="int" column="post_no" jdbcType="INTEGER"/>
        <result property="boardNo" javaType="int" column="bo_no" jdbcType="INTEGER"/>
        <result property="subject" javaType="String" column="po_subject" jdbcType="INTEGER"/>
        <result property="content" javaType="string" column="po_content" jdbcType="VARCHAR"/>
        <result property="writerNo" javaType="int" column="po_mb_no" jdbcType="INTEGER"/>
        <result property="tag" javaType="string" column="po_tag" jdbcType="VARCHAR"/>
        <result property="views" javaType="int" column="po_views" jdbcType="INTEGER"/>
        <result property="comment" javaType="int" column="po_comment" jdbcType="INTEGER"/>
        <result property="createDate" javaType="String" column="createDate" jdbcType="DATE"/>
        <result property="createDateTime" javaType="String" column="createDateTime"/>
        <result property="blind" javaType="int" column="po_isblind" jdbcType="INTEGER"/>
        <association property="memberInfo" javaType="MemberVo">
            <id property="memNo" column="mb_no"/>
            <result property="nick" column="mb_nick"/>
        </association>
    </resultMap>

    <!--태그로 게시글 검색-->
    <select id="selectPostByTag" parameterType="string" resultMap="selectPostListResult">
        SELECT post_no, bo_no, po_subject, po_mb_no,
        mb_nick,
        po_views, po_comment, po_tag
        FROM post INNER JOIN member ON post.po_mb_no = member.mb_no
        WHERE concat(',',po_tag,',') like CONCAT('%',#{tag},'%') AND po_isblind = 0
        ORDER BY createDate DESC
    </select>

    <!--특정 게시판 내 게시글 정보 전체 조회 (유닛테스트 - 게시글 작성을 위함, 목록 출력에서 contant가 추가된 형태) -->
    <select id="selectPostListByBoard" parameterType="int" resultType="PostVo">
        SELECT post_no as postNo, bo_no as boardNo, po_subject as subject, po_content as content
        FROM post
        WHERE bo_no = #{boardNo}
        ORDER BY post_no DESC
    </select>

    <!-- 내가 작성한 게시글 목록 조회	-->
    <select id="selectMyPosts" parameterType="int" resultMap="selectPostListResult">
        SELECT post_no, bo_no, po_subject, po_mb_no, mb_nick,
        DATE_FORMAT(po_datetime, '%Y-%m-%d') as createDate, po_views, po_comment as comment, po_isblind
        FROM post INNER JOIN member ON post.po_mb_no = member.mb_no
        WHERE po_mb_no = #{MemNo}
        ORDER BY createDate DESC
    </select>

    <!--뷰에 출력되는 게시글 목록-->
    <select id="selectPostList" parameterType="PostSummaryVo" resultMap="selectPostListResult">
        SELECT post_no, bo_no, po_subject, po_mb_no, mb_nick,
        DATE_FORMAT(po_datetime, '%Y-%m-%d %H:%i:%s') as createDateTime, DATE_FORMAT(po_datetime, '%Y-%m-%d') as
        createDate,
        po_views, po_comment
        FROM post INNER JOIN member ON post.po_mb_no = member.mb_no
        WHERE bo_no = #{boardNo} and po_isblind = 0
        <if
                test='searchKeyword !=null  and searchType.equalsIgnoreCase("subject")'>
            and po_subject like concat('%',#{searchKeyword},'%')
        </if>
        <if
                test='searchKeyword !=null  and searchType.equalsIgnoreCase("content")'>
            and po_content like concat('%',#{searchKeyword},'%')
        </if>
        <if
                test='searchKeyword !=null  and searchType.equalsIgnoreCase("nick")'>
            and mb_nick like concat('%',#{searchKeyword},'%')
        </if>
        ORDER BY post_no DESC
        LIMIT
        #{paginationInfo.firstRecordIndex}, #{recordsPerPage}
    </select>

    <!--뷰에 출력되는 게시글 개수 조회-->
    <select id="selectPostCount" parameterType="PostSummaryVo" resultType="int">
        SELECT
        COUNT(post_no)
        FROM post INNER JOIN member ON post.po_mb_no = member.mb_no
        where bo_no = #{boardNo} and po_isblind = 0
        <if
                test='searchKeyword !=null  and searchType.equalsIgnoreCase("subject")'>
            and po_subject like concat('%',#{searchKeyword},'%')
        </if>
        <if
                test='searchKeyword !=null  and searchType.equalsIgnoreCase("content")'>
            and po_content like concat('%',#{searchKeyword},'%')
        </if>
        <if
                test='searchKeyword !=null  and searchType.equalsIgnoreCase("nick")'>
            and mb_nick like concat('%',#{searchKeyword},'%')
        </if>
    </select>

    <!--게시글 존재 여부 조회-->
    <select id="selectPostSearch" parameterType="PostVo" resultType="integer">
        (select NULL AS bo_no
        FROM post
        WHERE NOT EXISTS(
        SELECT bo_no
        FROM post
        WHERE bo_no = #{boardNo} AND post_no = #{postNo}))
        UNION
        (SELECT bo_no
        FROM post
        WHERE bo_no = #{boardNo} AND post_no = #{postNo})
    </select>

    <resultMap id="selectDetailPostResult" type="PostVo">
        <id property="postNo" javaType="int" column="post_no" jdbcType="INTEGER"/>
        <result property="boardNo" javaType="int" column="bo_no" jdbcType="INTEGER"/>
        <result property="subject" javaType="String" column="po_subject" jdbcType="INTEGER"/>
        <result property="content" javaType="string" column="po_content" jdbcType="VARCHAR"/>
        <result property="writerNo" javaType="int" column="po_mb_no" jdbcType="INTEGER"/>
        <result property="createDate" javaType="String" column="createDate" jdbcType="DATE"/>
        <result property="createDateTime" javaType="String" column="createDatetime"/>
        <result property="tag" javaType="string" column="po_tag" jdbcType="VARCHAR"/>
        <result property="views" javaType="int" column="po_views" jdbcType="INTEGER"/>
        <result property="comment" javaType="int" column="po_comment" jdbcType="INTEGER"/>
        <result property="blind" javaType="int" column="po_isblind" jdbcType="INTEGER"/>
        <association property="memberInfo" javaType="MemberVo">
            <id property="memNo" column="mb_no"/>
            <result property="nick" column="mb_nick"/>
        </association>
        <association property="boardInfo" javaType="BoardVo">
            <id property="boardNo" column="bo_no"/>
            <result property="title" column="bo_name"/>
        </association>
        <association property="boardGroupInfo" javaType="BoardGroupVo">
            <id property="groupNo" column="bo_group_no"/>
            <result property="groupName" column="bo_group_name"/>
        </association>
    </resultMap>
    <!--	게시글 번호에 해당하는 게시글 상세정보를 조회-->
    <select id="selectDetailPost" parameterType="int" resultMap="selectDetailPostResult">
        SELECT a.bo_no, a.post_no, b.mb_nick,
        a.po_subject, a.po_content, a.po_mb_no,
        DATE_FORMAT(po_datetime, '%Y-%m-%d %H:%i:%s') as createDateTime, DATE_FORMAT(po_datetime, '%Y-%m-%d') as
        createDate,
        a.po_tag, a.po_views, a.po_comment, a.po_isblind, d.bo_group_name, c.bo_name
        FROM post a INNER JOIN member b ON a.po_mb_no = b.mb_no
        INNER JOIN board c ON a.bo_no = c.bo_no
        INNER JOIN board_group d ON c.bo_group_no = d.bo_group_no
        WHERE post_no = #{postNo}
        ORDER BY createDate DESC
    </select>

    <!--게시글 수정-->
    <update id="updatePost" parameterType="PostVo">
        UPDATE post SET po_subject = #{subject}, po_content = #{content}, po_tag = #{tag}
        WHERE post_no = #{postNo}
    </update>

    <!-- 게시글 조회수 증가 -->
    <update id="upHitcount" parameterType="int">
        UPDATE post SET po_views = po_views + 1 WHERE post_no = #{postNo}
    </update>

    <!-- 게시글 댓글수 증가/삭제 -->
    <parameterMap id="UpdateComment" type="PostUpdateCommentVo">
        <parameter property="postNo" javaType="int" jdbcType="INTEGER"/>
        <parameter property="updateComment" javaType="int" jdbcType="INTEGER"/>
    </parameterMap>
    <update id="upCommentcount" parameterMap="UpdateComment">
        UPDATE post SET po_comment = po_comment +#{updateComment} WHERE post_no = #{postNo}
    </update>

    <!--게시글 삭제-->
    <delete id="deletePost" parameterType="int">
        DELETE FROM post WHERE post_no = #{postNo}
    </delete>
</mapper>